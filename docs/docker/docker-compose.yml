name: servicecontrol-connector-sample
x-transport: &transport-env
  environment: 
    RAVENDB_CONNECTIONSTRING: "http://servicecontrol-db:8080"
    ALLOWMESSAGEEDITING: true

    #[RabbitMQ]
    #TRANSPORTTYPE: "RabbitMQ.QuorumConventionalRouting"
    #CONNECTIONSTRING: "host=host.docker.internal"
    #MANAGEMENTAPI: "http://guest:guest@host.docker.internal:15672"

    #[AzureServiceBus]
    #TRANSPORTTYPE: "NetStandardAzureServiceBus"
    #CONNECTIONSTRING: "<connection-string>"

    #[Amazon SQS]
    #TRANSPORTTYPE: "AmazonSQS"
    #AWS_REGION: "<region>"
    #AWS_ACCESS_KEY_ID: "<access-key>"
    #AWS_SECRET_ACCESS_KEY: "<secret-access-key>"
    #CONNECTIONSTRING: "Region=$AWS_REGION;AccessKeyId=$AWS_ACCESS_KEY_ID;SecretAccessKey=$AWS_SECRET_ACCESS_KEY"
   
services:
  service-control-db:
    container_name: "servicecontrol-db"
    image: "particular/servicecontrol-ravendb:latest"
    volumes:
      - db:/opt/RavenDB/Server/RavenData
  servicecontrol-setup:
    depends_on:
      - service-control-db
    container_name: "servicecontrol-setup"
    image: "particular/servicecontrol:latest"
    command: "--setup"
    << : [*transport-env]
  service-control:
    depends_on:
      service-control-db:
        condition: service_started
      servicecontrol-setup:
        condition: service_completed_successfully
    container_name: "servicecontrol"
    image: "particular/servicecontrol:latest"
    ports:
      - 33333:33333
    << : [*transport-env]
  masstransit-connector:
    depends_on:
      - service-control
    container_name: "masstransit-connector"
    image: "particular/servicecontrol-connector-masstransit:latest"
    << : [*transport-env]
  service-pulse:
    depends_on:
      - service-control
    container_name: "servicepulse"
    image: "particular/servicepulse:latest"
    ports:
        - 9090:9090
    environment:
        - SERVICECONTROL_URL=http://servicecontrol:33333/api/

volumes:
  db: