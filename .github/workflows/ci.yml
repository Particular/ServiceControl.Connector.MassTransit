name: CI
on:
  push:
    branches:
      - master
      - release-*
  pull_request:
  workflow_dispatch:
env:
  DOTNET_NOLOGO: true
  VERBOSE_TEST_LOGGING: true
defaults:
  run:
    shell: pwsh
jobs:
  build:
    runs-on: ubuntu-22.04
    name: ${{ matrix.transport }}
    strategy:
      matrix:
        transport: [ RabbitMQ, AzureServiceBus, AmazonSQS ]
      fail-fast: false
    steps:
      - name: Check for secrets
        env:
          SECRETS_AVAILABLE: ${{ secrets.SECRETS_AVAILABLE }}
        shell: pwsh
        run: exit $(If ($env:SECRETS_AVAILABLE -eq 'true') { 0 } Else { 1 })
      - name: Checkout
        uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0
          submodules: true
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4.0.1
        with:
          dotnet-version: 8.0.x
      - name: Build
        run: dotnet build src --configuration Release -graph --property:WindowsSelfContained=true
      - name: Azure login
        uses: azure/login@v2.1.1
        with:
          creds: ${{ secrets.AZURE_ACI_CREDENTIALS }}
          enable-AzPSSession: true
      - name: Setup Azure Service Bus
        if: matrix.transport == 'AzureServiceBus'
        uses: Particular/setup-azureservicebus-action@v2.0.0
        with:
          connection-string-name: AzureServiceBus_ConnectionString
          azure-credentials: ${{ secrets.AZURE_ACI_CREDENTIALS }}
          tag: ASBMTConnector
      - name: Setup AWS SDK environment
        if: matrix.transport == 'AmazonSQS'
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
      - name: Setup RabbitMQ
        if: matrix.transport == 'RabbitMQ'
        uses: Particular/setup-rabbitmq-action@v1.7.0
        with:
          connection-string-name: RabbitMQTransport_ConnectionString
          tag: RabbitMQMTConnector
          registry-username: ${{ secrets.DOCKERHUB_USERNAME }}
          registry-password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Run tests
        uses: Particular/run-tests-action@v1.7.0
      - name: Test publish arm64
        run: dotnet publish --os linux --arch arm64 src/ServiceControl.Connector.MassTransit.Host/ServiceControl.Connector.MassTransit.Host.csproj --configuration Release --graph
      - name: Test publish amd64
        run: dotnet publish --os linux --arch amd64 src/ServiceControl.Connector.MassTransit.Host/ServiceControl.Connector.MassTransit.Host.csproj --configuration Release --graph
