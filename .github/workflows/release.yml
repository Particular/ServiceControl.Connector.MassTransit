name: Release
on:
  push:
    branches:
      - master
      - release-*
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-*'
  pull_request:
  workflow_dispatch:
env:
  DOTNET_NOLOGO: true
jobs:
  container:
    if: ${{ github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    steps:
      - name: Check for secrets
        env:
          SECRETS_AVAILABLE: ${{ secrets.SECRETS_AVAILABLE }}
        shell: pwsh
        run: exit $(If ($env:SECRETS_AVAILABLE -eq 'true') { 0 } Else { 1 })
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
      - name: Install MinVer CLI
        run: dotnet tool install --global minver-cli
      - name: Determine versions
        shell: pwsh
        run: |
          # Read settings from Custom.Build.props
          [xml]$xml = Get-Content ./src/Custom.Build.props
          $minMajorMinor = $xml.selectNodes('/Project/PropertyGroup/MinVerMinimumMajorMinor').InnerText
          $autoIncrement = $xml.selectNodes('/Project/PropertyGroup/MinVerAutoIncrement').InnerText
          echo "MinVerMinimumMajorMinor=$minMajorMinor, MinVerAutoIncrement=$autoIncrement"
          if (-not ($minMajorMinor -and $autoIncrement)) {
            throw "Missing MinVer settings in Custom.Build.props"
          }

          # Execute MinVer
          echo "MinVerVersion=$(minver --minimum-major-minor $minMajorMinor --auto-increment $autoIncrement)" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
      - name: Validate build version
        if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
        uses: ./.github/actions/validate-version
        with:
          version: ${{ env.MinVerVersion }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.9.0
      - name: Log in to GitHub container registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Build & inspect image
        env:
          TAG_NAME: ${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.number) || env.MinVerVersion }}
        run: |
          docker buildx build --push --tag ghcr.io/particular/servicecontrol-masstransit-connector:${{ env.TAG_NAME }} \
              --file src/ServiceControl.Connector.MassTransit.Host/Dockerfile \
              --build-arg VERSION=${{ env.MinVerVersion }} \
              --build-arg SHA=${{ github.sha }} \
              --build-arg CREATED=$(date '+%FT%TZ') \
              --platform linux/arm64,linux/amd64 .
          docker buildx imagetools inspect ghcr.io/particular/servicecontrol-masstransit-connector:${{ env.TAG_NAME }}
      - name: Deploy
        if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
        # Does not follow standard practice of targeting explicit versions because configuration is tightly coupled to Octopus Deploy configuration
        uses: Particular/push-octopus-package-action@main
        with:
          octopus-deploy-api-key: ${{ secrets.OCTOPUS_DEPLOY_API_KEY }}
