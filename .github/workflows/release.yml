name: Release
on:
  push:
    branches:
      - master
      - release-*
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-*'
  pull_request:
  workflow_dispatch:
env:
  DOTNET_NOLOGO: true
jobs:
  container:
    if: ${{ github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    steps:
      - name: Check for secrets
        env:
          SECRETS_AVAILABLE: ${{ secrets.SECRETS_AVAILABLE }}
        shell: pwsh
        run: exit $(If ($env:SECRETS_AVAILABLE -eq 'true') { 0 } Else { 1 })
      - name: Checkout
        uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0
          submodules: true
      - name: Install MinVer CLI
        run: dotnet tool install --global minver-cli
      - name: Determine versions
        shell: pwsh
        run: |
          # Read settings from Custom.Build.props
          [xml]$xml = Get-Content ./src/Custom.Build.props
          $minMajorMinor = $xml.selectNodes('/Project/PropertyGroup/MinVerMinimumMajorMinor').InnerText
          $autoIncrement = $xml.selectNodes('/Project/PropertyGroup/MinVerAutoIncrement').InnerText
          echo "MinVerMinimumMajorMinor=$minMajorMinor, MinVerAutoIncrement=$autoIncrement"
          if (-not ($minMajorMinor -and $autoIncrement)) {
            throw "Missing MinVer settings in Custom.Build.props"
          }
          
          # Execute MinVer
          echo "MinVerVersion=$(minver --minimum-major-minor $minMajorMinor --auto-increment $autoIncrement)" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
      - name: Validate build version
        if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
        uses: ./.github/actions/validate-version
        with:
          version: ${{ env.MinVerVersion }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.6.1
      - name: Log in to GitHub container registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Build & inspect image
        env:
          TAG_NAME: ${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.number) || env.MinVerVersion }}
        run: |
          docker buildx build --push --tag ghcr.io/particular/servicecontrol-connector-masstransit:${{ env.TAG_NAME }} \
              --file src/ServiceControl.Connector.MassTransit.Host/Dockerfile \
              --build-arg VERSION=${{ env.MinVerVersion }} \
              --annotation "index:org.opencontainers.image.title=ServiceControl.Connector.MassTransit" \
              --annotation "index:org.opencontainers.image.description=ServiceControl MassTransit connector" \
              --annotation "index:org.opencontainers.image.created=$(date '+%FT%TZ')" \
              --annotation "index:org.opencontainers.image.revision=${{ github.sha }}" \
              --annotation "index:org.opencontainers.image.authors=Particular Software" \
              --annotation "index:org.opencontainers.image.vendor=Particular Software" \
              --annotation "index:org.opencontainers.image.version=${{ env.MinVerVersion }}" \
              --annotation "index:org.opencontainers.image.source=https://github.com/Particular/ServiceControl.Connector.MassTransit/tree/${{ github.sha }}" \
              --annotation "index:org.opencontainers.image.url=https://hub.docker.com/r/particular/servicecontrol-connector-masstransit" \
              --annotation "index:org.opencontainers.image.documentation=https://docs.particular.net/servicecontrol/" \
              --annotation "index:org.opencontainers.image.base.name=mcr.microsoft.com/dotnet/aspnet:8.0" \
              --platform linux/arm64,linux/amd64 .
          docker buildx imagetools inspect ghcr.io/particular/servicecontrol-connector-masstransit:${{ env.TAG_NAME }}
      - name: Create Octopus Deploy release
        uses: OctopusDeploy/create-release-action@v3.2.2
        with:
          server: https://deploy.particular.net
          api_key: ${{ inputs.octopus-deploy-api-key }}
          project: ServiceControl.Connector.MassTransit
          release_number: ${{env.MinVerVersion}}
          package_version: ${{env.MinVerVersion}}
          packages: "GitReleaseManager:0.17.0"
          space: "Default"